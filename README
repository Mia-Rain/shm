---
shm
-- sh en/decoder for faster writing
---
Usage
-- encode
  >> ./encode < sh
-- decode
  >> ./decode < shm
-- shebang
  >> #!/usr/bin/env shm 
  >>>> ./shm will auto decode shm code
  >>>> add -i to write output to ${file%.shm}
  >>>>>> write will fail if original file is same as ${file%.shm}
  >>>> ./shm will also auto encode shell code
  >>>>>> ALWAYS check en/decoded code before use
  >>>>>> NO code is ever perfect, and shm certainly isn't either
  >>>>>>>> ./shm does not work with STDIN ...
---
What?
-- shm encodes POSIX sh to shm and decodes shm to POSIX sh
---- shm replaces some POSIX sh builtins with shorthands
---- much like true & false have : & !
---- shm can be written using only ASCII symbols
---- but also features letter equivalents 
---
Dictionary
-- :    -- true  | !    -- false
-- ::/w -- while | !!/u -- until | ;;/n -- done
-- **/f -- for   | >:/i -- in    | ;/d  -- do
-- :*/c -- case  | *:/s -- esac  
-- :-/r -- read
-- -;/e -- echo  | -:/p -- printf
-- ()/o -- EOF
---
Syntax changes
-- shm applies some syntax changes, they are as follows
---- for:
  >> for i in  -- incorrect
  >> for $i in -- correct
  >>>> this change allows for i to replace in
---- read:
  >> read REQUIRES -r
  >> read -r   -- correct
  >>>> this is due to issues with -r matching r
  >>>> expecting -r fixes this & -r should always be used
---- functions:
  >> functions should NOT be a single letter
  >>>> this is to prevent calling functions from colliding with shm
---
Caveats
-- lines MUST not have trailing white-space
---
---
